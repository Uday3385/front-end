name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Authenticate with ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry: private
        env:
          AWS_REGION: us-east-1
  
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: front-end
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.run_number }}



      - name: Extract Container Name
        id: extract_container_name
        run: |
          echo "::set-output name=container_name::front-end"  # Replace "your-container-name" with your actual container name

      - name: Deploy to EC2 Auto Scaling Group
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update Auto Scaling Group
        env:
          AUTO_SCALING_GROUP_NAME: WEB-Server
          LAUNCH_TEMPLATE_NAME: Web-Server
        run: |
          aws autoscaling update-auto-scaling-group --auto-scaling-group-name $AUTO_SCALING_GROUP_NAME --region ${{ env.AWS_REGION }} --launch-template LaunchTemplateName=$LAUNCH_TEMPLATE_NAME

      - name: Deploy Docker image to EC2 instances
        env:
          AUTO_SCALING_GROUP_NAME: WEB-Server
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: front-end
          CONTAINER_NAME: ${{ steps.extract_container_name.outputs.container_name }}
        run: |
          INSTANCE_IDS=$(aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names $AUTO_SCALING_GROUP_NAME --query "AutoScalingGroups[].Instances[].InstanceId" --output text)
          aws ec2 stop-instances --instance-ids $INSTANCE_IDS --region ${{ env.AWS_REGION }}
          sleep 60
          aws ec2 start-instances --instance-ids $INSTANCE_IDS --region ${{ env.AWS_REGION }}
          sleep 60
          aws ec2 wait instance-status-ok --instance-ids $INSTANCE_IDS --region ${{ env.AWS_REGION }}
          for INSTANCE_ID in $INSTANCE_IDS; do
            aws ssm send-command --instance-ids $INSTANCE_ID --document-name "AWS-RunShellScript" --comment "Update Docker image" --parameters "commands=['sudo docker pull ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest', 'sudo docker stop ${CONTAINER_NAME}', 'sudo docker rm ${CONTAINER_NAME}', 'sudo docker run -d --name ${CONTAINER_NAME} -p 80:80 ${ECR_REGISTRY}/${ECR_REPOSITORY}:latest']" --region ${{ env.AWS_REGION }}
          done

